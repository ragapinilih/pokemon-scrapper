services:
  db:
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 20

  migrate:
    build: .
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
    command: ["python", "-m", "database.migration"]

  scrape:
    build: .
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
    command: ["python", "-m", "scrapers.scraper"]

  api:
    build: .
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    command: ["/app/entrypoint.sh"]

volumes:
  pgdata:
